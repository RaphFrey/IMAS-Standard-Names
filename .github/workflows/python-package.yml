name: CI/CD

on:
  push:
    branches:
      - main
      - develop
      - submit
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

env:
  BASE_PYTHON_VERSION: "3.12"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/install-project
        with:
          python-version: ${{ matrix.python-version }}
          pip-extras: "test"

      - name: Ruff format check
        uses: astral-sh/ruff-action@v3
        with:
          args: "format --check"
          version: "latest"

      - name: Test with pytest
        run: |
          if [[ "${{ matrix.python-version }}" == "${{ env.BASE_PYTHON_VERSION }}" ]]; then
            python -m pytest \
              --html=htmltest/index.html \
              --self-contained-html \
              --cov \
              --cov-report json \
              --cov-report html
          else
            python -m pytest
          fi

      - name: Upload coverage json report for README coverage badge on main branch
        if: matrix.python-version == env.BASE_PYTHON_VERSION  && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        uses: actions/upload-artifact@v4
        with:
          name: cov-json-${{ github.ref_name }}
          path: coverage.json
          retention-days: 1

      - name: Upload coverage html report
        if: matrix.python-version == env.BASE_PYTHON_VERSION
        uses: actions/upload-artifact@v4
        with:
          name: cov-html-${{ github.ref_name }}
          path: htmlcov/
          retention-days: 1

      - name: Upload pytest html report
        if: matrix.python-version == env.BASE_PYTHON_VERSION
        uses: actions/upload-artifact@v4
        with:
          name: pytest-html-${{ github.ref_name }}
          path: htmltest/
          retention-days: 1

      - name: Install docs dependencies and build docs
        if: matrix.python-version == env.BASE_PYTHON_VERSION
        run: |
          python -m pip install .[docs]
          # Determine which branch we're building docs for
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [[ "$BRANCH_NAME" == "main" || "$BRANCH_NAME" == "develop" || "$BRANCH_NAME" == "submit" ]]; then
            echo "Building documentation for branch: $BRANCH_NAME"
            mkdocs build -d ./site/$BRANCH_NAME
          else
            echo "Building documentation for PR or other branch"
            mkdocs build -d ./site/main
          fi

      - name: Upload documentation
        if: matrix.python-version == env.BASE_PYTHON_VERSION && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/submit')
        uses: actions/upload-artifact@v4
        with:
          name: docs-${{ github.ref_name }}
          path: ./site/${{ github.ref_name }}/
          retention-days: 1

  coverage-badge:
    needs: build
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download coverage json report
        uses: actions/download-artifact@v4
        with:
          name: cov-json-${{ github.ref_name }}

      - name: Update Coverage Badge
        uses: we-cli/coverage-badge-action@main

  deploy-docs:
    needs:
      - build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/submit'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy-docs.outputs.page_url }}${{ env.SITE_DIR }}
    env:
      SITE_DIR: ${{ github.ref_name != 'main' && github.ref_name || '' }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - id: deploy-docs
        uses: ./.github/actions/deploy-docs
        with:
          artifacts: >
            {
              "docs-${{ github.ref_name }}": "${{ env.SITE_DIR }}",
              "cov-html-${{ github.ref_name }}": "${{ env.SITE_DIR }}/coverage",
              "pytest-html-${{ github.ref_name }}": "${{ env.SITE_DIR }}/pytest"
            }
