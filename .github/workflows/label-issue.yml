on:
  issues:
    types: [opened,edited]
  workflow_call:
    outputs:
        standard-name:
            description: 'Proposed Standard Name.'
            value: ${{ jobs.parse-issue.outputs.standard-name }}
        update:
          description: 'Output from update_standardnames script.'
          value: ${{ jobs.label-issue.outputs.update }}

jobs:

  parse-issue:
    uses: ./.github/workflows/parse-issue.yml

  label-issue:
    runs-on: ubuntu-latest
    needs: parse-issue
    outputs: 
        standard-name: ${{ needs.parse-issue.outputs.standard-name }}
        update: ${{ steps.standardname-update.outputs.update }}

    steps:

      - name: Add priority label
        if: contains(needs.parse-issue.outputs.options, 'high priority')
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
        run: gh issue edit $ISSUE_URL --add-label "high priority"

      - name: Remove priority label
        if: ${{ !contains(needs.parse-issue.outputs.options, 'high priority') && contains(github.event.issue.labels.*.name, 'high priority') }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
        run: gh issue edit $ISSUE_URL --remove-label "high priority"

      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install imas-standard-names
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Check for existing Standard Name
        id: has-name
        run: echo "duplicate=$(has_standardname standardnames.yml ${{ needs.parse-issue.outputs.standard-name }})" >> $GITHUB_ENV

      - name: Add duplicate label
        if: contains(env.duplicate, 'True')
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
        run: gh issue edit $ISSUE_URL --add-label "duplicate"

      - name: Remove dulicalte label 
        if: contains(env.duplicate, 'False') && contains(github.event.issue.labels.*.name, 'duplicate')
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
        run: gh issue edit $ISSUE_URL --remove-label "duplicate"

      - name: Update Standard Names
        run: |
            echo '${{ needs.parse-issue.outputs.submission }}' > submission.json
            echo "update=$(update_standardnames standardnames.yml submission.json)" >> $GITHUB_ENV

      - name: Handle update error
        if: contains(env.update, 'Error')
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            ISSUE_URL: ${{ github.event.issue.html_url }}
        run: |
            gh issue edit $ISSUE_URL --remove-label "merge"
            gh issue edit $ISSUE_URL --add-label "needswork"
            echo -e ${{ env.update }} | gh issue comment $ISSUE_URL --body-file -
    
      - name: Write update variable as a github output
        id: standardname-update
        run: echo "update=$update" >> $GITHUB_OUTPUT

      - name: echo outputs
        run: |
          echo ${{ steps.standardname-update.outputs.update }}